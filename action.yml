name: 'auto-build-android'
description: 'Builds and signs the android application'
inputs:
  path-to-control-file:
    description: 'The TSX file that holds the version-string and build number for Android'
    required: true
    default: constants.tsx

  keystore-secret:
    description: 'Secret-variable with the base64 encoded keystore certificate'
    required: true

  keystore-alias:
    description: 'The alias for the keystore certificate'
    required: true

  keystore-password:
    description: 'The password for the keystore certificate'
    required: true

  name-of-version-string:
    description: 'The name of the version-string variable on the TSX file'
    required: true
    default: PUBLIC_VERSION

  name-of-version-placeholder:
    description: 'Tha placeholder value for the Version String'
    required: true
    default: "Interna"

  name-of-build-string:
    description: 'The name of the build version variable on the TSX file'
    required: true
    default: BUILD_ANDROID

  java-version:
    description: 'Java version to use'
    required: true
    default: '17'

  node-version:
    description: 'Node version to use'
    required: true
    default: 16.x


runs:
  using: "composite"
  steps:
    - name: Check if version and build string are present on control-file. Locally change version string to tag
      shell: bash
      run: |
        if [ $(grep -oP "${{inputs.name-of-version-string}} = 'Versi√≥n\s*\K[^';]+" ${{ inputs.path-to-control-file }}) ]; then echo "Version string present!"; else exit 1; fi
        if [ $(grep -oP '${{ inputs.name-of-build-string }} = \s*\K\d+' ${{ inputs.path-to-control-file }}) ]; then echo "Build number present!"; else exit 1; fi
    
    - name: Setup python
              uses: actions/setup-python@v5.1.0
              with:
                python-version: '3.10'
    
    - name: Setup JAVA
      uses: actions/setup-java@v4.0.0
      with:
        distribution: 'adopt'
        java-version: ${{ inputs.java-version }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v3.6.0
      with:
        node-version: ${{inputs.node-version}}

    - name: Unpack Keystore file
      shell: bash
      run: base64 -d << ${{inputs.keystore-secret}} > keyfile.jks

    - name: Setup IONIC
      shell: bash
      run: npm install -g @ionic/cli

    - name: Install app dependencies
      shell: bash
      run: npm install

    - name: Build the app and generate Android files
      shell: bash
      env:
        CI: ""
      run: |
        echo "Building the app ..."
        ionic --max_old_space_size=2048 build
        echo "Generate Android files ..."
        ionic capacitor copy android
        echo "Build android-dev version ..."
        ionic capacitor build android
        echo "Build android-prod version ..."
        ionic capacitor build android --release --prod

    - name: Generate the resources
      shell: bash
      run: npx @capacitor/assets generate --android

    - name: Update versioning on source files
      shell: bash
      run: |
        python ${{github.action_path}}/scripts/BuildHandler.py --constants-file ${{inputs.path-to-control-file}} --version-var ${{inputs.name-of-version-string}} --build-var ${{inputs.name-of-build-string}} --build-file android/app/build.gradle
        cat android/app/build.gradle
    

    - name: Sign the release app
      shell: bash
      run: npx cap build android --androidreleasetype=AAB --keystorealias=${{ inputs.keystore-alias }} --keystorealiaspass=${{ inputs.keystore-password }} --keystorepass=${{ inputs.keystore-password }} --keystorepath=${{ github.action_path }}/'keyfile.jks'